substitutions:
  device_name: p1mini
  device_password: !secret p1mini_password

esphome:
  name: ${device_name}
  platform: ESP8266
  board: d1_mini
  includes:
    - p1mini.h

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  #use_address: p1reader.local

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "esp-${device_name}"
    password: "${device_password}"

captive_portal:

# Enable logging
logger:
  level: INFO
  baud_rate: 0 # disable logging over uart

# Enable Home Assistant API
api:
  password: "${device_password}"

ota:
  password: "${device_password}"

web_server:
  port: 80
  ota: false
#  auth:
#    username: admin
#    password: "${device_password}"

text_sensor:
# Reports the ESPHome Version with compile date
  - platform: version
    name: "${device_name} ESPHome Version"

switch:
  - platform: gpio
    id: p1_cts
    pin:
      number: D2
  - platform: gpio
    id: status_led
    pin:
      number: D4
      inverted: true

binary_sensor:
  - platform: gpio
    id: secondary_p1_rts
    pin:
      number: D0
      mode: INPUT_PULLDOWN
      inverted: false

uart:
  id: uart_bus
  tx_pin:
    number: TX
    inverted: true
    mode: OUTPUT_OPEN_DRAIN
  rx_pin:
    number: RX
    inverted: true
    mode: INPUT_PULLUP
  baud_rate: 115200

number:
  - platform: template
    name: "${device_name} update period"
    id: p1_period
    icon: "mdi:timer"
    unit_of_measurement: s
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 20
    step: 0.25
    initial_value: 2 # Set to your desired update period (in seconds)
    internal: false # Set to true to hide setting from Home Assistant etc.



sensor:
- platform: wifi_signal
  name: "${device_name} WiFi Signal"
  update_interval: 10s
- platform: custom
  lambda: |-
    auto meter_sensor = new P1Reader(
      id(uart_bus),
      id(p1_period),
      id(p1_cts),
      id(status_led),
      id(secondary_p1_rts)
    );
    App.register_component(meter_sensor);
    return {
      meter_sensor->AddSensor( 1, 8, 0),
      meter_sensor->AddSensor( 2, 8, 0),
      meter_sensor->AddSensor( 3, 8, 0),
      meter_sensor->AddSensor( 4, 8, 0),
      meter_sensor->AddSensor( 1, 7, 0),
      meter_sensor->AddSensor( 2, 7, 0),
      meter_sensor->AddSensor( 3, 7, 0),
      meter_sensor->AddSensor( 4, 7, 0),
      meter_sensor->AddSensor(21, 7, 0),
      meter_sensor->AddSensor(22, 7, 0),
      meter_sensor->AddSensor(41, 7, 0),
      meter_sensor->AddSensor(42, 7, 0),
      meter_sensor->AddSensor(61, 7, 0),
      meter_sensor->AddSensor(62, 7, 0),
      meter_sensor->AddSensor(23, 7, 0),
      meter_sensor->AddSensor(24, 7, 0),
      meter_sensor->AddSensor(43, 7, 0),
      meter_sensor->AddSensor(44, 7, 0),
      meter_sensor->AddSensor(63, 7, 0),
      meter_sensor->AddSensor(64, 7, 0),
      meter_sensor->AddSensor(32, 7, 0),
      meter_sensor->AddSensor(52, 7, 0),
      meter_sensor->AddSensor(72, 7, 0),
      meter_sensor->AddSensor(31, 7, 0),
      meter_sensor->AddSensor(51, 7, 0),
      meter_sensor->AddSensor(71, 7, 0)
    };
  sensors:
  - name: "Cumulative Active Import"
    unit_of_measurement: kWh
    accuracy_decimals: 3
    state_class: "total_increasing"
    device_class: "energy"
  - name: "Cumulative Active Export"
    unit_of_measurement: kWh
    accuracy_decimals: 3
    state_class: "total_increasing"
    device_class: "energy"
  - name: "Cumulative Reactive Import"
    unit_of_measurement: kvarh
    accuracy_decimals: 3
  - name: "Cumulative Reactive Export"
    unit_of_measurement: kvarh
    accuracy_decimals: 3
  - name: "Momentary Active Import"
    unit_of_measurement: kW
    accuracy_decimals: 3
  - name: "Momentary Active Export"
    unit_of_measurement: kW
    accuracy_decimals: 3
  - name: "Momentary Reactive Import"
    unit_of_measurement: kvar
    accuracy_decimals: 3
  - name: "Momentary Reactive Export"
    unit_of_measurement: kvar
    accuracy_decimals: 3
  - name: "Momentary Active Import Phase 1"
    unit_of_measurement: kW
    accuracy_decimals: 3
  - name: "Momentary Active Export Phase 1"
    unit_of_measurement: kW
    accuracy_decimals: 3
  - name: "Momentary Active Import Phase 2"
    unit_of_measurement: kW
    accuracy_decimals: 3
  - name: "Momentary Active Export Phase 2"
    unit_of_measurement: kW
    accuracy_decimals: 3
  - name: "Momentary Active Import Phase 3"
    unit_of_measurement: kW
    accuracy_decimals: 3
  - name: "Momentary Active Export Phase 3"
    unit_of_measurement: kW
    accuracy_decimals: 3
  - name: "Momentary Reactive Import Phase 1"
    unit_of_measurement: kvar
    accuracy_decimals: 3
  - name: "Momentary Reactive Export Phase 1"
    unit_of_measurement: kvar
    accuracy_decimals: 3
  - name: "Momentary Reactive Import Phase 2"
    unit_of_measurement: kvar
    accuracy_decimals: 3
  - name: "Momentary Reactive Export Phase 2"
    unit_of_measurement: kvar
    accuracy_decimals: 3
  - name: "Momentary Reactive Import Phase 3"
    unit_of_measurement: kvar
    accuracy_decimals: 3
  - name: "Momentary Reactive Export Phase 3"
    unit_of_measurement: kvar
    accuracy_decimals: 3
  - name: "Voltage Phase 1"
    unit_of_measurement: V
    accuracy_decimals: 1
  - name: "Voltage Phase 2"
    unit_of_measurement: V
    accuracy_decimals: 1
  - name: "Voltage Phase 3"
    unit_of_measurement: V
    accuracy_decimals: 1
  - name: "Current Phase 1"
    unit_of_measurement: A
    accuracy_decimals: 1
  - name: "Current Phase 2"
    unit_of_measurement: A
    accuracy_decimals: 1
  - name: "Current Phase 3"
    unit_of_measurement: A
    accuracy_decimals: 1
